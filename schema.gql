# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""User"""
type User {
  """ID of the persistence object"""
  id: ID

  """Created date"""
  createdAt: DateTime

  """Labels of the object"""
  labels: [String!]

  """Users who own the object"""
  ownerIds: [String!]

  """Tags for the object"""
  tags: [String!]

  """Updated date"""
  updatedAt: DateTime

  """Email of the user"""
  email: String

  """First name of the user"""
  firstName: String

  """Last name of the user"""
  lastName: String

  """Roles of the user"""
  roles: [String!]

  """Username of the user"""
  username: String

  """Verification state of the user"""
  verified: Boolean

  """URL to avatar file of the user"""
  avatar: String

  """ID of the user who created the object"""
  createdBy: User

  """ID of the user who last updated the object"""
  updatedBy: User
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Auth"""
type Auth {
  """JavaScript Web Token (JWT)"""
  token: String!

  """User who signed in"""
  user: User!
}

"""Tax"""
type Tax {
  """percentage of Tax"""
  percentage: String!

  """inclusive of Tax"""
  inclusive: Boolean!
}

"""Frequency"""
type Frequency {
  """interval_unit of Frequency"""
  interval_unit: String!

  """interval_count of Frequency"""
  interval_count: Float!
}

"""FixedPrice"""
type FixedPrice {
  """currency_code of FixedPrice"""
  currency_code: String!

  """value of FixedPrice"""
  value: String!
}

"""PricingScheme"""
type PricingScheme {
  """auto_bill_outstanding of PricingScheme"""
  fixed_price: FixedPrice!

  """setup_fee of PricingScheme"""
  version: Float!

  """create_time of PricingScheme"""
  create_time: String!

  """update_time of PricingScheme"""
  update_time: String!
}

"""BillingCycles"""
type BillingCycles {
  """frequency of BillingCycles"""
  frequency: Frequency!

  """tenure_type of BillingCycles"""
  tenure_type: String!

  """sequence of BillingCycles"""
  sequence: Float!

  """total_cycles of BillingCycles"""
  total_cycles: Float!

  """pricing_scheme of BillingCycles"""
  pricing_scheme: PricingScheme!
}

"""SetupFee"""
type SetupFee {
  """value of SetupFee"""
  value: String!

  """currency_code of SetupFee"""
  currency_code: String!
}

"""PaymentPreferences"""
type PaymentPreferences {
  """auto_bill_outstanding of PaymentPreferences"""
  auto_bill_outstanding: Boolean!

  """setup_fee of PaymentPreferences"""
  setup_fee: SetupFee!

  """setup_fee_failure_action of PaymentPreferences"""
  setup_fee_failure_action: String!

  """payment_failure_threshold of PaymentPreferences"""
  payment_failure_threshold: Float!
}

"""SubscriptionPlan"""
type SubscriptionPlan {
  """ID of the persistence object"""
  id: ID

  """Created date"""
  createdAt: DateTime

  """Labels of the object"""
  labels: [String!]

  """Users who own the object"""
  ownerIds: [String!]

  """Tags for the object"""
  tags: [String!]

  """Updated date"""
  updatedAt: DateTime

  """product_id of SubscriptionPlan"""
  product_id: String!

  """name of SubscriptionPlan"""
  name: String!

  """status of SubscriptionPlan"""
  status: String!

  """description of SubscriptionPlan"""
  description: String!

  """billing_cycles of SubscriptionPlan"""
  billing_cycles: [BillingCycles!]!

  """payment_preferences of SubscriptionPlan"""
  payment_preferences: PaymentPreferences!

  """taxes of SubscriptionPlan"""
  taxes: Tax

  """quantity_supported of SubscriptionPlan"""
  quantity_supported: Boolean!

  """create_time of SubscriptionPlan"""
  create_time: String!

  """update_time of SubscriptionPlan"""
  update_time: String!
}

"""InvoicePaymentTerm"""
type InvoicePaymentTerm {
  """ID of the persistence object"""
  id: ID

  """Created date"""
  createdAt: DateTime

  """Labels of the object"""
  labels: [String!]

  """Users who own the object"""
  ownerIds: [String!]

  """Tags for the object"""
  tags: [String!]

  """Updated date"""
  updatedAt: DateTime

  """term_type of InvoicePaymentTerm"""
  term_type: String!

  """due_date of InvoicePaymentTerm"""
  due_date: String!
}

"""InvoiceMetadata"""
type InvoiceMetadata {
  """ID of the persistence object"""
  id: ID

  """Created date"""
  createdAt: DateTime

  """Labels of the object"""
  labels: [String!]

  """Users who own the object"""
  ownerIds: [String!]

  """Tags for the object"""
  tags: [String!]

  """Updated date"""
  updatedAt: DateTime

  """create_time of InvoiceMetadata"""
  create_time: String!

  """recipient_view_url of InvoiceMetadata"""
  recipient_view_url: String!

  """invoicer_view_url of InvoiceMetadata"""
  invoicer_view_url: String!
}

"""InvoiceDetail"""
type InvoiceDetail {
  """ID of the persistence object"""
  id: ID

  """Created date"""
  createdAt: DateTime

  """Labels of the object"""
  labels: [String!]

  """Users who own the object"""
  ownerIds: [String!]

  """Tags for the object"""
  tags: [String!]

  """Updated date"""
  updatedAt: DateTime

  """invoice_number of InvoiceDetail"""
  invoice_number: String!

  """reference of InvoiceDetail"""
  reference: String!

  """invoice_date of InvoiceDetail"""
  invoice_date: String!

  """currency_code of InvoiceDetail"""
  currency_code: String!

  """note of InvoiceDetail"""
  note: String!

  """term of InvoiceDetail"""
  term: String!

  """memo of InvoiceDetail"""
  memo: String!

  """payment_term of InvoiceDetail"""
  payment_term: InvoicePaymentTerm!

  """metadata of InvoiceDetail"""
  metadata: InvoiceMetadata!
}

"""Invoice"""
type Invoice {
  """id of Invoice"""
  id: String!

  """Created date"""
  createdAt: DateTime

  """Labels of the object"""
  labels: [String!]

  """Users who own the object"""
  ownerIds: [String!]

  """Tags for the object"""
  tags: [String!]

  """Updated date"""
  updatedAt: DateTime

  """status of Invoice"""
  status: String!

  """status of Invoice"""
  detail: InvoiceDetail!

  """status of Invoice"""
  invoicer: String!

  """status of Invoice"""
  primary_recipients: String!

  """status of Invoice"""
  amount: String!
}

type Query {
  """Get JWT token"""
  signIn(email: String!, password: String!): Auth!

  """Get user with specified ID"""
  getUser(id: String!): User!

  """Find users (via filter)"""
  findUsers(
    """
    Limit specifies the maximum number of elements found that are to be returned
    """
    limit: Int = 25

    """Offset specifies how many found elements should be skipped on return"""
    offset: Int = 0

    """Alias for offset"""
    skip: Int

    """Sorting the returned elements"""
    sort: [SortInput!]

    """Alias for limit"""
    take: Int = 25

    """Input for filtering"""
    filter: FilterInput
  ): [User!]!

  """Request new password for user with email"""
  requestPasswordResetMail(email: String!): Boolean!

  """Load SubscriptionPlans from paypal api to db"""
  loadPlans: Boolean!

  """Get all SubscriptionPlans"""
  getAllPlans: [SubscriptionPlan!]!

  """Get all SubscriptionPlans"""
  getInvoices: [Invoice!]!

  """Get all SubscriptionPlans"""
  cancelSubscription(subscriptionId: String!): Boolean!
}

"""Sorting the returned elements"""
input SortInput {
  """Field that is to be used for sorting"""
  field: String!

  """SortInput order of the field"""
  order: SortOrderEnum!
}

"""SortInput order of items"""
enum SortOrderEnum {
  ASC
  DESC
}

"""
Input for filtering. The `singleFilter` will be ignored if the `combinedFilter` is set.
"""
input FilterInput {
  """Combination of multiple filters via logical operator"""
  combinedFilter: CombinedFilterInput

  """Filter for a single property"""
  singleFilter: SingleFilterInput
}

"""Combination of multiple filters via logical operator"""
input CombinedFilterInput {
  """Logical Operator to combine filters"""
  logicalOperator: LogicalOperatorEnum!

  """Filters to combine via logical operator"""
  filters: [FilterInput!]!
}

"""Logical operators to combine filters"""
enum LogicalOperatorEnum {
  AND
  NOR
  OR
}

"""Input for a configuration of a filter"""
input SingleFilterInput {
  """Name of the property to be used for the filter"""
  field: String!

  """
  [Negate operator](https://docs.mongodb.com/manual/reference/operator/query/not/)
  """
  not: Boolean

  """
  [Comparison operator](https://docs.mongodb.com/manual/reference/operator/query-comparison/)
  """
  operator: ComparisonOperatorEnum!

  """
  [Options](https://docs.mongodb.com/manual/reference/operator/query/regex/#op._S_options) for [REGEX](https://docs.mongodb.com/manual/reference/operator/query/regex/) operator
  """
  options: String

  """Value of the property"""
  value: JSON!
}

"""
[Comparison Operators](https://docs.mongodb.com/manual/reference/operator/query-comparison/) for filters
"""
enum ComparisonOperatorEnum {
  EQ
  GT
  GTE
  IN
  LT
  LTE
  NE
  NIN
  REGEX
}

"""
JSON scalar type. Information on the exact schema of the JSON object is contained in the description of the field.
"""
scalar JSON

type Mutation {
  """Verify user with email"""
  verifyUser(token: String!): Boolean!

  """Set new password for user with token"""
  resetPassword(token: String!, password: String!): Boolean!

  """Create a new user"""
  createUser(input: UserCreateInput!): User!

  """Update existing user"""
  updateUser(input: UserInput!, id: String!): User!

  """Delete existing user"""
  deleteUser(id: String!): User!
}

"""User input to create a new user"""
input UserCreateInput {
  """Email of the user"""
  email: String!

  """First name of the user"""
  firstName: String

  """Last name of the user"""
  lastName: String

  """Roles of the user"""
  roles: [String!]

  """Username / alias of the user"""
  username: String

  """Password of the user"""
  password: String
}

"""User input"""
input UserInput {
  """Email of the user"""
  email: String

  """First name of the user"""
  firstName: String

  """Last name of the user"""
  lastName: String

  """Roles of the user"""
  roles: [String!]

  """Username / alias of the user"""
  username: String

  """Password of the user"""
  password: String
}

type Subscription {
  userCreated: User!
}